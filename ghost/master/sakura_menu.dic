SakuraMenuGreetings : nonoverlap
{
	"Wassup."
}

//Because there is an all modifier here, you don't need to write -- between menu options
OnSakuraMenu : all
{
	"\0"
	"\![set,autoscroll,disable]"
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	//if SHIORI3FW.Eventid == "OnMouseDoubleClick"; SakuraMenuGreetings + "\n\n" //The check here is so they won't comment if you click the back button. Remove if you prefer
	
	"\_q"
	
	"\![*]\q[Observe,OnAiTalk]"
	if LastTalk != ""; "  \![*]\q[See chat log,OnLastTalk]"
	"\n\n"
	"\![*]\q[Talk,OnTalkMenu]\n"
	"\![*]\q[Encourage,OnEncourageMenu]\n\n"
	
	"\![*]\q[Preferences,OnSettings]\n\n"
	
	"\![*]\q[Nevermind,blank]"
	
	if SHIORI3FW.DebugMode; "\n\nProject: %(CurrentProject) (%((ProjectModeTime - GETSECCOUNT) / 60) minutes remaining)\nWork: %(CurrentWork) (%((WorkModeTime - GETSECCOUNT) / 60) minutes remaining)\nMood: %(CurrentMood) (%((MoodModeTime - GETSECCOUNT) / 60) minutes remaining)\nSurface: %(SurfaceModeTime - GETSECCOUNT)"
}

OnLastTalk : all
{
	"\C\![lock,balloonrepaint]\c\0\b[2]\_q\*"
	
	foreach LastTalk; _talk
	{
		_talk + "\n\n"
		//Maybe a separator?
	}
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Done,blank]"
	"\![unlock,balloonrepaint]"
}

OnTalkMenu : all
{
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"\f[italic,1]Talk about...\f[italic,default]\n\n"
	
	"\![*]\q[Ghosts,OnTalk.Ghosts]\n"
	"\![*]\q[Your ghosts,OnTalk.HisGhosts]\n"
	"\![*]\q[Your current project,OnTalk.CurrentProject]\n"
	"\![*]\q[Ghost tips,OnTalk.GhostTips]\n"
	"\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
	
}

OnTalk.Ghosts
{
	"\0%(typing):> dialogue<:"
	--
	backbuttons
}

OnTalk.HisGhosts : all
{
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"\f[italic,1]Which ghost?\f[italic,default]\n\n"
	"\![*]\q[OC ghost,OnTalkGhost.OC]\n"
	"\![*]\q[Fandom ghost,OnTalkGhost.Fandom]\n"
	"\![*]\q[Jam ghost,OnTalkGhost.Jam]\n"
	"\n"
	"\![*]\q[Big fandom ghost,OnTalkGhost.BigFandom]\n"
	"\![*]\q[Mini fandom ghost,OnTalkGhost.MiniFandom]\n"
	"\![*]\q[Obscure ghost,OnTalkGhost.Obscure]\n"
	"\![*]\q[Object ghost,OnTalkGhost.Object]\n"
	"\n"
	"\![*]\q[Back,OnTalkMenu]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnTalkGhost.OC
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.Fandom
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.Jam
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.BigFandom
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.MiniFandom
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.Obscure
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.Object
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalk.CurrentProject
{
	"\0%(typing):> dialogue<:"
	--
	backbuttons
}

OnTalk.GhostTips
{
	"\0%(typing):> dialogue<:"
	--
	backbuttons
}

backbuttons
{
	"\w8\w8\n\n\_q\![*]\q[Back,OnTalkMenu]  \![*]\q[Nevermind,blank]"
}

backbuttonsghost
{
	"\w8\w8\n\n\_q\![*]\q[Back,OnTalk.HisGhosts]  \![*]\q[Nevermind,blank]"
}

//ALL THE DIALOGUES ASSOCIATED WITH THIS ARE PLACEHOLDER
OnEncourageMenu : all
{
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	
	if !DefaultBalloon; "\b[0]"
	else; "\b[1]"
	
	"\![*]\q[Get back to work,OnEncourageWork]\n"
	"\![*]\q[Take a break,OnEncourageBreak]\n"
	"\![*]\q[Stay hydrated,OnEncourageWater]\n"
	"\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnEncourageWork
{
	if CurrentProject != "Idle"
	{
		"I'm already working, what more do you want?"
	}
	elseif CurrentMood == "Long"
	{
		"I suppose I should get started"
	}
	elseif CurrentMood == "Short"
	{
		"I'll get back to it in a bit"
	}
	else //Random mood
	{
		"I'm on break, let me rest for a little."
	}
}

OnEncourageBreak
{
	if CurrentMood == "Long"
	{
		"Not right now, I'm in the zone and I don't wanna lose it"
	}
	elseif CurrentMood == "Short"
	{
		"Not a bad idea, I'm not getting much done anyways"
	}
	else //Random mood
	{
		"Maybe in a bit"
	}
}

OnEncourageWater
{
	if CurrentMood == "Long"
	{
		"Hm? Oh, yeah, I forgot, thanks"
	}
	elseif CurrentMood == "Short"
	{
		"Hydrate or diedrate, nerds"
	}
	else //Random mood
	{
		"Later"
	}
}

OnSettings : all
{
	if !ISVAR("SpecialFont"); SpecialFont = ("",DefaultFontSize)
	"\C\![lock,balloonrepaint]\c\0\_q\f[anchorvisitedfontcolor,default.anchor]"
	"\![set,autoscroll,disable]"
	"\![close,inputbox,OnNewNickname]\![close,inputbox,OnFontSizeSlider]"
	"\f[align,center]%(emdash) Chat Preferences %(emdash)\n\n\f[align,left]"
	
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"Username: \![*]\_a[OnChangeUsername]%(origname)\_a\n"
	"Nickname: \![*]\_a[OnChangeNickname]%(username)\_a"
	if nickname != ""; " \__q[OnResetNickname](reset)\__q"
	"\n\n"
	
	_font = "Default"
	if SpecialFont[0] != ""; _font = SpecialFont[0]
	"Font: \![*]\_a[OnChangeFont]%(_font)\_a (\_a[OnFontSizeSlider]%(SpecialFont[1])\_a) \f[height,default]\q[▲,OnFontSize,up] \q[▼,OnFontSize,down]\f[height,%(SpecialFont[1])]"
	if SpecialFont[0] != "" || SpecialFont[1] != DefaultFontSize; " \__q[OnResetFont](reset)\__q"
	"\n"
	if DefaultBalloon
	{
		"Text color: "
		switch WhiteText
		{
			"\__q[OnToggleTextColor,green]Green\__q  \f[color,disable]\__q[OnToggleTextColor,white]White\__q\f[color,default]"
			"\f[color,disable]\__q[OnToggleTextColor,green]Green\__q\f[color,default]  \__q[OnToggleTextColor,white]White\__q"
		}
	}
	else; "\n"
	"\n\n"
	
	
	"Screenshare: \_a[OnToggleScreenshare]%(('On','Off')[KeroHidden])\_a\n"
	_scales = (25,50,100,150,200,300)
	
	if KeroHidden; "\f[color,disable]"
	
	"Screenshare size:\n"
	
	foreach _scales; _scale
	{
		if KeroHidden; "%(_scale)% "
		else
		{
			_tag = ""
			if KeroScale == _scale; _tag = "\_a"
			else; _tag = "\__q"
			_tag + "[OnChangeKeroScale,%(_scale)]%(_scale)%" + _tag + " "
		}
	}
	"\n\n"
	if KeroHidden; "\f[color,default]"
	
	"\![*]\q[Change message frequency,OnTalkRateMenu]\n\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
	
	"\![unlock,balloonrepaint]"
}

OnChangeUsername : all
{
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"\![open,configurationdialog,setup]"
	"\f[italic,1](Username can be changed in the ""User Information"" section at the bottom of the SSP preferences.)\n\n"
	"(After setting your name, close the SSP preferences window and then click below to return to Mothy's preferences.)\f[italic,default]\n\n"
	"\![*]\q[Back to preferences,OnSettings]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnChangeNickname : all
{
	"\0\s[1]"
	"\![open,inputbox,OnNewNickname,-1]"
	
	":> what should I call you?<:"
	
	"\w8\w8\_q\n\n\![*]\q[Back,OnSettings]  \![*]\q[Nevermind,OnCancelInput]"
}

OnNewNickname : all
{
	nickname = reference0
	OnSettings
	// "\_q> k, %(nickname) it is.\_q\w8\w8\n\n:> cool.<:\w8\w8"
	
	// "\n\n\_q\![*]\q[Back,OnSettings]  \![*]\q[Done,blank]"
	// "\_w[%((RAND(3) + 1) * 1000)]%(OnSurfaceRestore)"
}

OnCancelInput
{
	"\C\![close,inputbox,OnNewNickname]\![close,inputbox,OnFontSizeSlider]%(OnSurfaceRestore)"
}

OnResetNickname
{
	nickname = ""
	OnSettings
}

OnNotifyFontInfo
{
	FontList = reference
}

OnChangeFont : all
{
	_totalpages = (ARRAYSIZE(FontList) / 10) - 1
	if ARRAYSIZE(FontList) % 10 != 0; _totalpages++
	
	if reference0 == ""; reference0 = 0
	if reference0 < 0; reference0 = 0
	if reference0 > _totalpages; reference0 = _totalpages
	
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"\f[align,center]%(emdash) Font Selection %(emdash)\n\f[align,left]"
	
	switch reference0 == 0
	{
		"\q[<<,OnChangeFont,%(reference0 - 1)]"
		"\f[color,disable]<<\f[color,default]"
	}
	"\n \n[-100]\f[align,center] Page %(reference0 + 1) / %(_totalpages + 1) \n \n[-100]\f[align,right]"
	
	switch reference0 >= _totalpages
	{
		"\q[>>,OnChangeFont,%(reference0 + 1)]"
		"\f[color,disable]>>\f[color,default]"
	}
	"\n\n\f[align,left]"
	"\![*]\__q[OnNewFont,]Reset to default\__q\n\n"
	
	
	for _i = reference0 * 10; _i < ARRAYSIZE(FontList) && _i < (reference0 + 1) * 10; _i++
	{
		_font = FontList[_i]
		"\![*]\f[name,""%(_font)""]\__q[OnNewFont,""%(_font)""]%(_font)\__q\n"
	}
	
	if SpecialFont[0] != ""; "\f[name,%(SpecialFont[0])]"
	else; "\f[name,default]"
	"\n\_q\![*]\q[Back,OnSettings]  \![*]\q[Nevermind,blank]\![unlock,balloonrepaint]"
}

OnNewFont
{
	SpecialFont[0] = reference0
	OnSettings
}

OnFontSize
{
	if reference0 == "up"
	{
		SpecialFont[1]++
	}
	else //down
	{
		SpecialFont[1]--
	}
	if SpecialFont[1] <= 1; SpecialFont[1] = 1
	OnSettings
}

OnFontSizeSlider : all
{
	"\0\_q"
	"\![open,sliderinput,OnFontSizeSlider,-1,14,1,100]"
	
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	if reference0 != ""; SpecialFont[1] = TOINT(reference0)
	
	"Current font size: %(SpecialFont[1])"
	
	"\n\n\![*]\q[Back,OnSettings]  \![*]\q[Nevermind,OnCancelInput]"
}

OnResetFont
{
	SpecialFont = ("",DefaultFontSize)
	OnSettings
}

OnToggleTextColor
{
	if reference0 == "white"; WhiteText = 1
	else; WhiteText = 0
	OnSettings
}

OnToggleScreenshare
{
	"\C\![lock,balloonrepaint]\1\![bind,Hide,Toggle]"
}

OnChangeKeroScale
{
	KeroScale = reference0
	"\C\![lock,balloonrepaint]\1\![set,scaling,%(KeroScale)]\0\![raise,OnSettings]"
}

OnTalkRateMenu : all
{	
	//This is just setting up a label, you may need to add to it or tweak it if you change what rates are available
	_talkrate = "Off"
	if aitalkinterval == 30; _talkrate = "30 seconds"
	elseif aitalkinterval == 60; _talkrate = "1 minute"
	elseif aitalkinterval == 180; _talkrate = "3 minutes"
	elseif aitalkinterval == 300; _talkrate = "5 minutes"
	elseif aitalkinterval == 600; _talkrate = "10 minutes"
	
	"\C\![lock,balloonrepaint]\c\0\_q"
	
	if !DefaultBalloon; "\![set,autoscroll,disable]\b[2]"
	else; "\b[6]"
	
	"Current frequency: %(_talkrate)\n\n"
	
	"\![*]\q[Off,OnTalkRateChange,0]\n"
	"\![*]\q[30 seconds,OnTalkRateChange,30]\n"
	"\![*]\q[1 minute,OnTalkRateChange,60]\n"
	"\![*]\q[3 minutes,OnTalkRateChange,180]\n"
	"\![*]\q[5 minutes,OnTalkRateChange,300]\n"
	"\![*]\q[10 minutes,OnTalkRateChange,600]\n"
	"\n"
	"\![*]\q[Back,OnSettings]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnTalkRateChange
{
	aitalkinterval = TOINT(reference0)
}