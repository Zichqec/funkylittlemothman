SakuraMenuGreetings : nonoverlap
{
	"Wassup."
}

//Because there is an all modifier here, you don't need to write -- between menu options
OnSakuraMenu : all
{
	"\0"
	"\![set,autoscroll,disable]"
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	//if SHIORI3FW.Eventid == "OnMouseDoubleClick"; SakuraMenuGreetings + "\n\n" //The check here is so they won't comment if you click the back button. Remove if you prefer
	
	"\_q"
	
	"\![*]\q[Observe,OnAiTalk]"
	if LastTalk != ""; "  \![*]\q[See chat log,OnLastTalk]"
	"\n\n"
	"\![*]\q[Talk,OnTalkMenu]\n"
	"\![*]\q[Encourage,OnEncourageMenu]\n\n"
	
	"\![*]\q[Preferences,OnSettings]\n\n"
	
	"\![*]\q[Nevermind,blank]"
	
	if SHIORI3FW.DebugMode; "\n\nProject: %(CurrentProject) (%((ProjectModeTime - GETSECCOUNT) / 60) minutes remaining)\nWork: %(CurrentWork) (%((WorkModeTime - GETSECCOUNT) / 60) minutes remaining)\nMood: %(CurrentMood) (%((MoodModeTime - GETSECCOUNT) / 60) minutes remaining)\nSurface: %(SurfaceModeTime - GETSECCOUNT)"
}

OnLastTalk : all
{
	"\C\![lock,balloonrepaint]\c\0\b[2]\_q\*"
	
	foreach LastTalk; _talk
	{
		_talk + "\n\n"
		//Maybe a separator?
	}
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Done,blank]"
	"\![unlock,balloonrepaint]"
}

OnTalkMenu : all
{
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"\f[italic,1]Talk about...\f[italic,default]\n\n"
	
	"\![*]\q[Ghosts,OnTalk.Ghosts]\n"
	"\![*]\q[Your ghosts,OnTalk.HisGhosts]\n"
	"\![*]\q[Your current project,OnTalk.CurrentProject]\n"
	"\![*]\q[Ghost tips,OnTalk.GhostTips]\n"
	"\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
	
}

OnTalk.Ghosts
{
	"\0%(typing):> My favourite part of working on a ghost<: :> Coding<: :> Because when I'm coding it usually means I'm already done with everything else lol<:"
	"\0%(typing):> dialogue<:"
	"\0%(typing):> dialogue<:"
	"\0%(typing):> dialogue<:"
	"\0%(typing):> dialogue<:"
	"\0%(typing):> dialogue<:"
	"\0%(typing):> dialogue<:"
	"\0%(typing):> dialogue<:"
	"\0%(typing):> dialogue<:"
	"\0%(typing):> dialogue<:"
	--
	backbuttons
}

OnTalk.HisGhosts : all
{
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"\f[italic,1]Which ghost?\f[italic,default]\n\n"
	"\![*]\q[OC ghost,OnTalkGhost.OC]\n"
	"\![*]\q[Fandom ghost,OnTalkGhost.Fandom]\n"
	"\![*]\q[Jam ghost,OnTalkGhost.Jam]\n"
	"\n"
	"\![*]\q[Big fandom ghost,OnTalkGhost.BigFandom]\n"
	"\![*]\q[Mini fandom ghost,OnTalkGhost.MiniFandom]\n"
	"\![*]\q[Obscure ghost,OnTalkGhost.Obscure]\n"
	"\![*]\q[Object ghost,OnTalkGhost.Object]\n"
	"\n"
	"\![*]\q[Back,OnTalkMenu]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnTalkGhost.OC
{
	//first dialogue
	"\0%(typing):> This one is my first ghost<: :> I kinda just made him up as I went<: :> His name is Chesster<: :> And he plays chess<: :> And that's it<: \w8\w8:> Weeeeell he's packed with default template functions<: :> 'cuz I followed the tutorial and the template while I was making him<: :> But overall he just sits there and thinks about chess moves<: :> And that's pretty much it<:"
	
	"\0%(typing):> Funny thing is<: :> I'm atrocious at playing chess<: :> But I made Chesster chess-themed because I made first surface for him balck and white<: :> And rolled with it:<"
	"\0%(typing):> Chesster was his work-in-progress name<: :> I just put in something dumb when I decided on the whole chess theme<: :> But then idk I got attached?<: :> Silly little mothman<: :> me:<"
	"\0%(typing):> Imagine programming a working game of chess in SSP<: :> Couldn't be me<: :> Because literally<: :> Skill issue<:"
	"\0%(typing):> So Chesster is usually all timid<: :> Just chess man doing chess stuff<: :> Thinking chess thoughts<: :> But he has<: :> A DARK SIIIDE<: :> tho rn I didn't really programm in him being angry<: :> I need to give user and option to flip the table or something<: :> But then Chesster will hate you forever<: :> Hmm...<:"
	"\0%(typing):> On some days I think<: :> Does anyone else even like Chesster?<: :> I mean he's a mess<: :> But<: :> idk<: :> I think he's kinda neat still<: :> Maybe it's just cuz I wroked on him for like two months and want someone to see it lol<:"
	"\0%(typing):> Look at this ghost man<: :> Just sitting at his table<: :> Thinking perperually<: :> top ghost experience, am I right<:\w8\s[7]"
	--
	backbuttonsghost
}

OnTalkGhost.Fandom
{
	//first dialogue
	"\0%(typing)\i[5]:> Oh oh oh %(username) that's my most popular ghost<: :> If you heard about me before that's probably why<: :> But yeah it's Molnia from the TV show 'Fairyland Forever'<: :> She's one of the fairies<: :> The cool one with lightning powers<: :> Fandom looooves her so when I posted this ghost it got popular faaast<: :> Still feels wild<:"
	
	"\0%(typing):> I tried to make Molnia as close to canon as possible<: :> Which was<: :> more hard than I expected<: :> but people say I did a pretty good job so I'll believe them lol<:"
	"\0%(typing)\i[5]:> Dude dude dude you GOTTA show the Fairyland Forever<: :> Well not must<: :> But I really recommend it<: :> I know it looks like a kid's show about fairies<: :> but there's SO MUCH<: :> LORE<: :> ANIMATION<: :> CHARACTER DRAMA<: :> SECRETS<: :> THAT ONE SCENE OH GOD<: :> Watch it watch it trust me<: :> And if you watch it tell me<: :> Don't worry Molnia doesn't have a lot of spoilers<: :> Only like<: :> Up to season 8<:"
	"\0%(typing)\i[5]:> I'm really proud of the little animations I did on this one<: :> And also just the surfaces in general<: :> I spent soooooooo much time on the wings<: :> Worth it tho<:"
	--
	backbuttonsghost
}

OnTalkGhost.Jam
{
	//first dialogue
	"\0%(typing):> I participated in a Ghost Jam once<: :> Since it was my first one I decided to go small<: :> So it's just<: :> an egg<: :> You click it and it moves sometimes<: :> And if you click it a lot you discover<: :> THE SECRET INSIIIIDE<: :> What's the secret?<: :> \i[5]Click the egg like a thousand times to find out<:"
	
	"\0%(typing):> Don't ask me why this egg took me a week<: :> It was my first jam<: :> Maybe I was nervous<: :> Or. lazy.<: :> Who can say<:"
	"\0%(typing):> I did make a lot of dress-ups for it<: :> I want to add more so badly<: :> but<: :> better add more functions first<: :> At least that's what I keep telling myself<:"
	"\0%(typing):> I went into the Jam with no real plan<: :> Just wanted to test my skills<: :> in the end<: :> I should've planned more lol<:"
	
	--
	backbuttonsghost
}

OnTalkGhost.BigFandom
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.MiniFandom
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.Obscure
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalkGhost.Object
{
	"\0%(typing):> dialogue<:"
	--
	backbuttonsghost
}

OnTalk.CurrentProject
{
	"\0%(typing):> dialogue<:"
	--
	backbuttons
}

OnTalk.GhostTips
{
	"\0%(typing):> dialogue<:"
	--
	backbuttons
}

backbuttons
{
	"\w8\w8\n\n\_q\![*]\q[Back,OnTalkMenu]  \![*]\q[Nevermind,blank]"
}

backbuttonsghost
{
	"\w8\w8\n\n\_q\![*]\q[Back,OnTalk.HisGhosts]  \![*]\q[Nevermind,blank]"
}

//ALL THE DIALOGUES ASSOCIATED WITH THIS ARE PLACEHOLDER
OnEncourageMenu : all
{
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	
	if !DefaultBalloon; "\b[0]"
	else; "\b[1]"
	
	"\![*]\q[Get back to work,OnEncourageWork]\n"
	"\![*]\q[Take a break,OnEncourageBreak]\n"
	"\![*]\q[Stay hydrated,OnEncourageWater]\n"
	"\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnEncourageWork
{
	if CurrentProject != "Idle"
	{
		"I'm already working, what more do you want?"
	}
	elseif CurrentMood == "Long"
	{
		"I suppose I should get started"
	}
	elseif CurrentMood == "Short"
	{
		"I'll get back to it in a bit"
	}
	else //Random mood
	{
		"I'm on break, let me rest for a little."
	}
}

OnEncourageBreak
{
	if CurrentMood == "Long"
	{
		"Not right now, I'm in the zone and I don't wanna lose it"
	}
	elseif CurrentMood == "Short"
	{
		"Not a bad idea, I'm not getting much done anyways"
	}
	else //Random mood
	{
		"Maybe in a bit"
	}
}

OnEncourageWater
{
	if CurrentMood == "Long"
	{
		"Hm? Oh, yeah, I forgot, thanks"
	}
	elseif CurrentMood == "Short"
	{
		"Hydrate or diedrate, nerds"
	}
	else //Random mood
	{
		"Later"
	}
}

OnSettings : all
{
	if !ISVAR("SpecialFont"); SpecialFont = ("",DefaultFontSize)
	"\C\![lock,balloonrepaint]\c\0\_q\f[anchorvisitedfontcolor,default.anchor]"
	"\![set,autoscroll,disable]"
	"\![close,inputbox,OnNewNickname]\![close,inputbox,OnFontSizeSlider]"
	"\f[align,center]%(emdash) Chat Preferences %(emdash)\n\n\f[align,left]"
	
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"Username: \![*]\_a[OnChangeUsername]%(origname)\_a\n"
	"Nickname: \![*]\_a[OnChangeNickname]%(username)\_a"
	if nickname != ""; " \__q[OnResetNickname](reset)\__q"
	"\n\n"
	
	_font = "Default"
	if SpecialFont[0] != ""; _font = SpecialFont[0]
	"Font: \![*]\_a[OnChangeFont]%(_font)\_a (\_a[OnFontSizeSlider]%(SpecialFont[1])\_a) \f[height,default]\q[▲,OnFontSize,up] \q[▼,OnFontSize,down]\f[height,%(SpecialFont[1])]"
	if SpecialFont[0] != "" || SpecialFont[1] != DefaultFontSize; " \__q[OnResetFont](reset)\__q"
	"\n"
	if DefaultBalloon
	{
		"Text color: "
		switch WhiteText
		{
			"\__q[OnToggleTextColor,green]Green\__q  \f[color,disable]\__q[OnToggleTextColor,white]White\__q\f[color,default]"
			"\f[color,disable]\__q[OnToggleTextColor,green]Green\__q\f[color,default]  \__q[OnToggleTextColor,white]White\__q"
		}
	}
	else; "\n"
	"\n\n"
	
	
	"Screenshare: \_a[OnToggleScreenshare]%(('On','Off')[KeroHidden])\_a\n"
	_scales = (25,50,100,150,200,300)
	
	if KeroHidden; "\f[color,disable]"
	
	"Screenshare size:\n"
	
	foreach _scales; _scale
	{
		if KeroHidden; "%(_scale)% "
		else
		{
			_tag = ""
			if KeroScale == _scale; _tag = "\_a"
			else; _tag = "\__q"
			_tag + "[OnChangeKeroScale,%(_scale)]%(_scale)%" + _tag + " "
		}
	}
	"\n\n"
	if KeroHidden; "\f[color,default]"
	
	"\![*]\q[Change message frequency,OnTalkRateMenu]\n\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
	
	"\![unlock,balloonrepaint]"
}

OnChangeUsername : all
{
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"\![open,configurationdialog,setup]"
	"\f[italic,1](Username can be changed in the ""User Information"" section at the bottom of the SSP preferences.)\n\n"
	"(After setting your name, close the SSP preferences window and then click below to return to Mothy's preferences.)\f[italic,default]\n\n"
	"\![*]\q[Back to preferences,OnSettings]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnChangeNickname : all
{
	"\0\s[1]"
	"\![open,inputbox,OnNewNickname,-1]"
	
	":> what should I call you?<:"
	
	"\w8\w8\_q\n\n\![*]\q[Back,OnSettings]  \![*]\q[Nevermind,OnCancelInput]"
}

OnNewNickname : all
{
	nickname = reference0
	OnSettings
	// "\_q> k, %(nickname) it is.\_q\w8\w8\n\n:> cool.<:\w8\w8"
	
	// "\n\n\_q\![*]\q[Back,OnSettings]  \![*]\q[Done,blank]"
	// "\_w[%((RAND(3) + 1) * 1000)]%(OnSurfaceRestore)"
}

OnCancelInput
{
	"\C\![close,inputbox,OnNewNickname]\![close,inputbox,OnFontSizeSlider]%(OnSurfaceRestore)"
}

OnResetNickname
{
	nickname = ""
	OnSettings
}

OnNotifyFontInfo
{
	FontList = reference
}

OnChangeFont : all
{
	_totalpages = (ARRAYSIZE(FontList) / 10) - 1
	if ARRAYSIZE(FontList) % 10 != 0; _totalpages++
	
	if reference0 == ""; reference0 = 0
	if reference0 < 0; reference0 = 0
	if reference0 > _totalpages; reference0 = _totalpages
	
	"\C\![lock,balloonrepaint]\c\0\_q"
	"\![set,autoscroll,disable]"
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	"\f[align,center]%(emdash) Font Selection %(emdash)\n\f[align,left]"
	
	switch reference0 == 0
	{
		"\q[<<,OnChangeFont,%(reference0 - 1)]"
		"\f[color,disable]<<\f[color,default]"
	}
	"\n \n[-100]\f[align,center] Page %(reference0 + 1) / %(_totalpages + 1) \n \n[-100]\f[align,right]"
	
	switch reference0 >= _totalpages
	{
		"\q[>>,OnChangeFont,%(reference0 + 1)]"
		"\f[color,disable]>>\f[color,default]"
	}
	"\n\n\f[align,left]"
	"\![*]\__q[OnNewFont,]Reset to default\__q\n\n"
	
	
	for _i = reference0 * 10; _i < ARRAYSIZE(FontList) && _i < (reference0 + 1) * 10; _i++
	{
		_font = FontList[_i]
		"\![*]\f[name,""%(_font)""]\__q[OnNewFont,""%(_font)""]%(_font)\__q\n"
	}
	
	if SpecialFont[0] != ""; "\f[name,%(SpecialFont[0])]"
	else; "\f[name,default]"
	"\n\_q\![*]\q[Back,OnSettings]  \![*]\q[Nevermind,blank]\![unlock,balloonrepaint]"
}

OnNewFont
{
	SpecialFont[0] = reference0
	OnSettings
}

OnFontSize
{
	if reference0 == "up"
	{
		SpecialFont[1]++
	}
	else //down
	{
		SpecialFont[1]--
	}
	if SpecialFont[1] <= 1; SpecialFont[1] = 1
	OnSettings
}

OnFontSizeSlider : all
{
	"\0\_q"
	"\![open,sliderinput,OnFontSizeSlider,-1,14,1,100]"
	
	if !DefaultBalloon; "\b[2]"
	else; "\b[6]"
	
	if reference0 != ""; SpecialFont[1] = TOINT(reference0)
	
	"Current font size: %(SpecialFont[1])"
	
	"\n\n\![*]\q[Back,OnSettings]  \![*]\q[Nevermind,OnCancelInput]"
}

OnResetFont
{
	SpecialFont = ("",DefaultFontSize)
	OnSettings
}

OnToggleTextColor
{
	if reference0 == "white"; WhiteText = 1
	else; WhiteText = 0
	OnSettings
}

OnToggleScreenshare
{
	"\C\![lock,balloonrepaint]\1\![bind,Hide,Toggle]"
}

OnChangeKeroScale
{
	KeroScale = reference0
	"\C\![lock,balloonrepaint]\1\![set,scaling,%(KeroScale)]\0\![raise,OnSettings]"
}

OnTalkRateMenu : all
{	
	//This is just setting up a label, you may need to add to it or tweak it if you change what rates are available
	_talkrate = "Off"
	if aitalkinterval == 30; _talkrate = "30 seconds"
	elseif aitalkinterval == 60; _talkrate = "1 minute"
	elseif aitalkinterval == 180; _talkrate = "3 minutes"
	elseif aitalkinterval == 300; _talkrate = "5 minutes"
	elseif aitalkinterval == 600; _talkrate = "10 minutes"
	
	"\C\![lock,balloonrepaint]\c\0\_q"
	
	if !DefaultBalloon; "\![set,autoscroll,disable]\b[2]"
	else; "\b[6]"
	
	"Current frequency: %(_talkrate)\n\n"
	
	"\![*]\q[Off,OnTalkRateChange,0]\n"
	"\![*]\q[30 seconds,OnTalkRateChange,30]\n"
	"\![*]\q[1 minute,OnTalkRateChange,60]\n"
	"\![*]\q[3 minutes,OnTalkRateChange,180]\n"
	"\![*]\q[5 minutes,OnTalkRateChange,300]\n"
	"\![*]\q[10 minutes,OnTalkRateChange,600]\n"
	"\n"
	"\![*]\q[Back,OnSettings]  \![*]\q[Nevermind,blank]"
	"\![unlock,balloonrepaint]"
}

OnTalkRateChange
{
	aitalkinterval = TOINT(reference0)
}